<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ybj.news_website.dao.User_transactionMapper">
  <resultMap id="BaseResultMap" type="com.ybj.news_website.model.User_transaction">
    <result column="transaction_id" jdbcType="INTEGER" property="transaction_id" />
    <result column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="to_user_id" jdbcType="INTEGER" property="to_user_id" />
    <result column="created_time" jdbcType="TIMESTAMP" property="created_time" />
    <result column="expend_sum" jdbcType="DOUBLE" property="expend_sum" />
    <result column="to_user_sum" jdbcType="DOUBLE" property="to_user_sum" />
    <result column="to_platform_sum" jdbcType="DOUBLE" property="to_platform_sum" />
    <result column="rate" jdbcType="REAL" property="rate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    transaction_id, user_id, to_user_id, created_time, expend_sum, to_user_sum, to_platform_sum, 
    rate
  </sql>
  <select id="selectByExample" parameterType="com.ybj.news_website.model.User_transactionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ybj.news_website.model.User_transactionExample">
    delete from user_transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ybj.news_website.model.User_transaction">
    insert into user_transaction (transaction_id, user_id, to_user_id, 
      created_time, expend_sum, to_user_sum, 
      to_platform_sum, rate)
    values (#{transaction_id,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER}, #{to_user_id,jdbcType=INTEGER}, 
      #{created_time,jdbcType=TIMESTAMP}, #{expend_sum,jdbcType=DOUBLE}, #{to_user_sum,jdbcType=DOUBLE}, 
      #{to_platform_sum,jdbcType=DOUBLE}, #{rate,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ybj.news_website.model.User_transaction">
    insert into user_transaction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transaction_id != null">
        transaction_id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="to_user_id != null">
        to_user_id,
      </if>
      <if test="created_time != null">
        created_time,
      </if>
      <if test="expend_sum != null">
        expend_sum,
      </if>
      <if test="to_user_sum != null">
        to_user_sum,
      </if>
      <if test="to_platform_sum != null">
        to_platform_sum,
      </if>
      <if test="rate != null">
        rate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transaction_id != null">
        #{transaction_id,jdbcType=INTEGER},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="to_user_id != null">
        #{to_user_id,jdbcType=INTEGER},
      </if>
      <if test="created_time != null">
        #{created_time,jdbcType=TIMESTAMP},
      </if>
      <if test="expend_sum != null">
        #{expend_sum,jdbcType=DOUBLE},
      </if>
      <if test="to_user_sum != null">
        #{to_user_sum,jdbcType=DOUBLE},
      </if>
      <if test="to_platform_sum != null">
        #{to_platform_sum,jdbcType=DOUBLE},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ybj.news_website.model.User_transactionExample" resultType="java.lang.Long">
    select count(*) from user_transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_transaction
    <set>
      <if test="record.transaction_id != null">
        transaction_id = #{record.transaction_id,jdbcType=INTEGER},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=INTEGER},
      </if>
      <if test="record.to_user_id != null">
        to_user_id = #{record.to_user_id,jdbcType=INTEGER},
      </if>
      <if test="record.created_time != null">
        created_time = #{record.created_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expend_sum != null">
        expend_sum = #{record.expend_sum,jdbcType=DOUBLE},
      </if>
      <if test="record.to_user_sum != null">
        to_user_sum = #{record.to_user_sum,jdbcType=DOUBLE},
      </if>
      <if test="record.to_platform_sum != null">
        to_platform_sum = #{record.to_platform_sum,jdbcType=DOUBLE},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_transaction
    set transaction_id = #{record.transaction_id,jdbcType=INTEGER},
      user_id = #{record.user_id,jdbcType=INTEGER},
      to_user_id = #{record.to_user_id,jdbcType=INTEGER},
      created_time = #{record.created_time,jdbcType=TIMESTAMP},
      expend_sum = #{record.expend_sum,jdbcType=DOUBLE},
      to_user_sum = #{record.to_user_sum,jdbcType=DOUBLE},
      to_platform_sum = #{record.to_platform_sum,jdbcType=DOUBLE},
      rate = #{record.rate,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>